{"version":3,"sources":["FilmDetails.js","FilmPoster.js","Fave.js","FilmRow.js","FilmListings.js","TMDB.js","App.js","serviceWorker.js","index.js"],"names":["FilmDetails","props","console","log","react_default","a","createElement","className","FilmPoster","src","filmLink","alt","Fave","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","stopPropagation","onFaveToggle","_this","isFaveClass","isFave","onClick","handleClick","concat","Component","FilmRow","date","Date","film","release_date","handleDetailsClick","src_FilmPoster","poster_path","title","getFullYear","src_Fave","FilmListings","state","filter","setState","_this2","allFilms","films","faves","map","src_FilmRow","key","id","includes","handleFilterClick","length","TMDB","api_key","backdrop_path","overview","App","current","handleFaveToggle","bind","assertThisInitialized","slice","filmIndex","indexOf","push","splice","src_FilmListings","src_FilmDetails","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42431809.chunk.js","sourcesContent":["import React from 'react';\n\nfunction FilmDetails(props) {\n  console.log(props)\n  return (\n    <div className=\"film-details\">\n      <h1 className=\"section-title\">DETAILS</h1>\n    </div>\n  )\n}\n\nexport default FilmDetails","import React from 'react';\n\nfunction FilmPoster(props) {\n  let posterUrl = 'https://image.tmdb.org/t/p/w780/'\n\n  return (\n    <img src={posterUrl + props.filmLink} alt=\"\" />\n  )\n}\n\nexport default FilmPoster","import React, { Component } from 'react';\n\nclass Fave extends Component {\n  constructor(props) {\n    super()\n  }\n\n  handleClick(e) {\n    e.stopPropagation()\n    console.log('Handling Fave click!')\n\n    // Add this line. You'll call the function passed through props\n    this.props.onFaveToggle()\n\n    // Delete the `setState` line. You no longer track state here\n    // this.setState({isFave: !this.state.isFave})\n  }\n\n  render() {\n    const isFaveClass = (this.props.isFave) ? 'remove_from_queue' : 'add_to_queue'\n\n    return (\n      <div onClick={(e) => this.handleClick(e)} className={`film-row-fave ${isFaveClass}`} >\n        <p className=\"material-icons\">{isFaveClass}</p>\n      </div>\n    )\n  }\n}\n\nexport default Fave","import React, { Component } from 'react';\nimport FilmPoster from './FilmPoster';\nimport Fave from './Fave';\n\nclass FilmRow extends Component {\n  constructor(props) {\n    super()\n  }\n\n  render() {\n    let date = new Date(this.props.film.release_date)\n\n    return (\n      <div className=\"film-row\" onClick={() => this.props.handleDetailsClick(this.props.film)}>\n        <FilmPoster filmLink={this.props.film.poster_path} />\n\n        <div className=\"film-summary\">\n          <h1>{this.props.film.title}</h1>\n          <p>{date.getFullYear()}</p>\n        </div>\n        <Fave\n          onFaveToggle={this.props.onFaveToggle}\n          isFave={this.props.isFave}\n        />\n      </div>\n    )\n  }\n}\n\nexport default FilmRow","\nimport React, { Component } from 'react';\nimport FilmRow from './FilmRow';\n\nclass FilmListings extends Component {\n  constructor(props) {\n    super()\n\n    this.state = {\n      filter: 'all'\n    }\n  }\n\n  handleFilterClick(filter) {\n    this.setState({\n      filter: filter\n    })\n  }\n\n  render() {\n    const filmsArray = this.state.filter === 'all' ? this.props.films : this.props.faves\n\n    const allFilms = filmsArray.map(film => {\n      return <FilmRow\n        key={film.id}\n        film={film}\n        onFaveToggle={() => this.props.onFaveToggle(film)}\n        isFave={this.props.faves.includes(film)}\n        handleDetailsClick={() => this.props.handleDetailsClick(film)} />\n    })\n\n    return (\n      <div className=\"film-list\">\n        <h1 className=\"section-title\">FILMS</h1>\n        <div className=\"film-list-filters\">\n          <div className={`film-list-filter ${this.state.filter === 'all' ? 'is-active' : ''}`} onClick={() => this.handleFilterClick('all')}>\n            ALL\n                <span className=\"section-count\">{this.props.films.length}</span>\n          </div>\n          <div className={`film-list-filter ${this.state.filter === 'faves' ? 'is-active' : ''}`} onClick={() => this.handleFilterClick('faves')}>\n            FAVES\n                <span className=\"section-count\">{this.props.faves.length}</span>\n          </div>\n        </div>\n\n        {allFilms}\n      </div>\n    )\n  }\n}\n\nexport default FilmListings\n","const TMDB = {\n  api_key: '<REPLACE_THIS_WITH_TMDB_API_KEY>',\n  films: [\n    {\n      \"id\": 346364,\n      \"title\": \"It\",\n      \"poster_path\": \"/9E2y5Q7WlCVNEhP5GiVTjhEhx1o.jpg\",\n      \"backdrop_path\": \"/tcheoA2nPATCm2vvXw2hVQoaEFD.jpg\",\n      \"overview\": \"In a small town in Maine, seven children known as The Losers Club come face to face with life problems, bullies and a monster that takes the shape of a clown called Pennywise.\",\n      \"release_date\": \"2017-09-05\"\n    },\n    {\n      \"id\": 343668,\n      \"title\": \"Kingsman: The Golden Circle\",\n      \"poster_path\": \"/pKESfn2Pdy0b7drvZHQb7UzgqoY.jpg\",\n      \"backdrop_path\": \"/uExPmkOHJySrbJyJDJylHDqaT58.jpg\",\n      \"overview\": \"When an attack on the Kingsman headquarters takes place and a new villain rises, Eggsy and Merlin are forced to work together with the American agency known as the Statesman to save the world.\",\n      \"release_date\": \"2017-09-20\"\n    },\n    {\n      \"id\": 339403,\n      \"title\": \"Baby Driver\",\n      \"poster_path\": \"/dN9LbVNNZFITwfaRjl4tmwGWkRg.jpg\",\n      \"backdrop_path\": \"/goCvLSUFz0p7k8R10Hv4CVh3EQv.jpg\",\n      \"overview\": \"After being coerced into working for a crime boss, a young getaway driver finds himself taking part in a heist doomed to fail.\",\n      \"release_date\": \"2017-06-28\"\n    },\n    {\n      \"id\": 335984,\n      \"title\": \"Blade Runner 2049\",\n      \"poster_path\": \"/cbRQVCia0urtv5UGsVFTdqLDIRv.jpg\",\n      \"backdrop_path\": \"/zfWPeRgYpRjPZLGwwkfnTfaFnNh.jpg\",\n      \"overview\": \"Thirty years after the events of the first film, a new blade runner, LAPD Officer K, unearths a long-buried secret that has the potential to plunge what's left of society into chaos. K's discovery leads him on a quest to find Rick Deckard, a former LAPD blade runner who has been missing for 30 years.\",\n      \"release_date\": \"2017-10-04\"\n    },\n    {\n      \"id\": 381283,\n      \"title\": \"mother!\",\n      \"poster_path\": \"/qmi2dsuoyzZdJ0WFZYQazbX8ILj.jpg\",\n      \"backdrop_path\": \"/uuQpQ8VDOtVL2IO4y2pR58odkS5.jpg\",\n      \"overview\": \"A couple's relationship is tested when uninvited guests arrive at their home, disrupting their tranquil existence.\",\n      \"release_date\": \"2017-09-13\"\n    },\n    {\n      \"id\": 374720,\n      \"title\": \"Dunkirk\",\n      \"poster_path\": \"/bOXBV303Fgkzn2K4FeKDc0O31q4.jpg\",\n      \"backdrop_path\": \"/fudEG1VUWuOqleXv6NwCExK0VLy.jpg\",\n      \"overview\": \"The miraculous evacuation of Allied soldiers from Belgium, Britain, Canada and France, who were cut off and surrounded by the German army from the beaches and harbor of Dunkirk, France, between May 26th and June 4th 1940, during the Battle of France in World War II.\",\n      \"release_date\": \"2017-07-19\"\n    },\n    {\n      \"id\": 415842,\n      \"title\": \"American Assassin\",\n      \"poster_path\": \"/o40BAqdTQHiN3cUfpgieDUYI71z.jpg\",\n      \"backdrop_path\": \"/puKZWmBIpuEMwGCn2hZkublG1rO.jpg\",\n      \"overview\": \"Following the murder of his fiancée, Mitch Rapp trains under the instruction of Cold War veteran Stan Hurley. The pair then is enlisted to investigate a wave of apparently random attacks on military and civilian targets.\",\n      \"release_date\": \"2017-09-14\"\n    },\n    {\n      \"id\": 390043,\n      \"title\": \"The Hitman's Bodyguard\",\n      \"poster_path\": \"/5CGjlz2vyBhW5xHW4eNOZIdgzYq.jpg\",\n      \"backdrop_path\": \"/7KsqfXDECZMryX1Rv4RKsT7SIjQ.jpg\",\n      \"overview\": \"The world's top bodyguard gets a new client, a hit man who must testify at the International Court of Justice. They must put their differences aside and work together to make it to the trial on time.\",\n      \"release_date\": \"2017-08-16\"\n    },\n    {\n      \"id\": 316154,\n      \"title\": \"The Bad Batch\",\n      \"poster_path\": \"/7o14VaMphEIzPwzeW6FP3A6zb4W.jpg\",\n      \"backdrop_path\": \"/aQ06MnEDLh9X3ZOtY21UD2XB197.jpg\",\n      \"overview\": \"In a desert wasteland in Texas, a muscled cannibal breaks one important rule: don’t play with your food.\",\n      \"release_date\": \"2017-06-23\"\n    }\n  ]\n}\n\nexport default TMDB;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FilmDetails from './FilmDetails.js';\nimport FilmListings from './FilmListings.js';\nimport TMDB from './TMDB.js';\n\nclass App extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      films: TMDB.films,\n      faves: [],\n      current: {}\n    }\n    this.handleFaveToggle = this.handleFaveToggle.bind(this)\n    this.handleDetailsClick = this.handleDetailsClick.bind(this)\n  }\n\n  handleDetailsClick(film) {\n    this.setState({\n      current: film\n    })\n  }\n\n  handleFaveToggle(film) {\n    const faves = this.state.faves.slice()\n    const filmIndex = faves.indexOf(film)\n\n    if (filmIndex === -1) {\n      faves.push(film)\n      console.log(`Adding ${film.title} to faves...`)\n    } else {\n      faves.splice(filmIndex, 1)\n      console.log(`Removing ${film.title} from faves...`)\n    }\n    this.setState({ faves })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <div className=\"film-library\">\n          <FilmListings\n            films={TMDB.films}\n            faves={this.state.faves}\n            onFaveToggle={this.handleFaveToggle}\n            handleDetailsClick={this.handleDetailsClick}\n          />\n          <FilmDetails film={this.state.current} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}